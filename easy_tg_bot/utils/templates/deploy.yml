name: Deploy to Vultr

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login "https://sjc.vultrcr.com/${{ secrets.CONTAINER_REGISTRY_NAME }}" -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t "${{ secrets.IMAGE_TAG }}" . --no-cache
        docker tag "${{ secrets.IMAGE_TAG }}" "sjc.vultrcr.com/${{ secrets.CONTAINER_REGISTRY_NAME }}/${{ secrets.IMAGE_TAG }}"
        docker push "sjc.vultrcr.com/${{ secrets.CONTAINER_REGISTRY_NAME }}/${{ secrets.IMAGE_TAG }}"

    - name: Deploy to Vultr
      run: |
        echo "${{ secrets.VULTR_SERVER_SSH_KEY }}" > /tmp/vultr_key
        
        # Ensure the key has the correct permissions
        chmod 600 /tmp/vultr_key
        
        # Connect to the server
        ssh -o StrictHostKeyChecking=no -i /tmp/vultr_key "${{ secrets.VULTR_SERVER_USER }}@${{ secrets.VULTR_SERVER_IP }}" << 'EOF'
          
          # Docker
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login "https://sjc.vultrcr.com/${{ secrets.CONTAINER_REGISTRY_NAME }}" -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker pull "sjc.vultrcr.com/${{ secrets.CONTAINER_REGISTRY_NAME }}/${{ secrets.IMAGE_TAG }}"
          
          # .env for running the container
          mkdir -p tmp
          echo "TG_BOT_NAME=${{ secrets.TG_BOT_NAME }}" > "/${{ secrets.VULTR_SERVER_USER }}/tmp/env.list"
          echo "TG_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }}" >> "/${{ secrets.VULTR_SERVER_USER }}/tmp/env.list"
          echo "TG_MY_ID=${{ secrets.TG_MY_ID }}" >> "/${{ secrets.VULTR_SERVER_USER }}/tmp/env.list"
          echo "TG_FILE_FOLDER_PATH=${{ secrets.TG_FILE_FOLDER_PATH }}" >> "/${{ secrets.VULTR_SERVER_USER }}/tmp/env.list"
          echo "TG_WEBHOOK_URL=http://${{ secrets.VULTR_SERVER_IP }}:${{ secrets.PORT }}" >> "/${{ secrets.VULTR_SERVER_USER }}/tmp/env.list"

          # Volumes configuration
          mkdir -p "${{ secrets.TG_BOT_NAME }}"
          
          # Unlock on the second commit
          docker stop "${{ secrets.APP_NAME }}" || true
          docker system prune -af

          # Run
          docker run -d --name "${{ secrets.APP_NAME }}" \
          -p "${{ secrets.PORT }}:80"\
          -v "/${{ secrets.VULTR_SERVER_USER }}/${{ secrets.TG_BOT_NAME }}":"/usr/src/app/${{ secrets.TG_FILE_FOLDER_PATH }}" \
          --env-file "/${{ secrets.VULTR_SERVER_USER }}/tmp/env.list" \
          "sjc.vultrcr.com/${{ secrets.CONTAINER_REGISTRY_NAME }}/${{ secrets.IMAGE_TAG }}"

          # Clean up
          rm -f /tmp/env.list
        EOF

    - name: Clean up temporary files
      run: |
        rm -f /tmp/vultr_key